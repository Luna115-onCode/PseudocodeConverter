name: Deploy to GitHub Pages

on:
  push:
    branches:
      - release
      - testing
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          echo "::set-output name=build_env::$(if [ '${{ github.ref }}' = 'refs/heads/release' ]; then echo 'production'; else echo 'development'; fi)"
          echo "::set-output name=path::$(if [ '${{ github.ref }}' = 'refs/heads/release' ]; then echo '/'; elif [ '${{ github.ref }}' = 'refs/heads/testing' ]; then echo '/test'; else echo '/development'; fi)"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build -- --configuration=${{ steps.set-env.outputs.build_env }}

      - name: Set up Git Credentials
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Prepare Git Worktree for gh-pages
        run: |
          git fetch origin gh-pages
          git worktree add deploy-folder gh-pages

      - name: Clean Deployment Directory
        run: |
          target_dir="deploy-folder${{ steps.set-env.outputs.path }}"
          mkdir -p "$target_dir"
          if [ "${{ github.ref }}" = "refs/heads/release" ]; then
            find deploy-folder -maxdepth 1 -type f ! -name 'README.md' ! -name 'LICENSE' -exec rm -f {} +
            find deploy-folder -maxdepth 1 -type d ! -name '.' ! -name '..' ! -name 'test' ! -name 'development' -exec rm -rf {} +
          else
            rm -rf "$target_dir"/*
          fi

      - name: Copy New Files to Deploy Folder
        run: |
          target_dir="deploy-folder${{ steps.set-env.outputs.path }}"
          mkdir -p "$target_dir"
          cp -r dist/* "$target_dir/"

      - name: Commit and Deploy to GitHub Pages
        working-directory: deploy-folder
        run: |
          git add .
          git commit -m "Deploy #${{ github.run_number }} from ${{ github.ref }} branch - ${{ steps.set-env.outputs.build_env }}"
          git push origin gh-pages --force

      - name: Clean Up Worktree
        run: git worktree remove deploy-folder --force
